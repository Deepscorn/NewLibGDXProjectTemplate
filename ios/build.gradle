apply plugin: 'java'
apply plugin: 'robovm'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

ext {
	mainClassName = "com.gamelift.koten.IOSLauncher"
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.robovm:robovm-gradle-plugin:1.14.0"
    }
}

configurations { natives }

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(":core")
    compile "org.robovm:robovm-rt:1.14.0"
    compile "org.robovm:robovm-cocoatouch:1.14.0"
    compile "com.badlogicgames.gdx:gdx-backend-robovm:1.9.3"
    natives "com.badlogicgames.gdx:gdx-platform:1.9.3:natives-ios"
    natives "com.badlogicgames.gdx:gdx-box2d-platform:1.9.3:natives-ios"
    natives "com.badlogicgames.gdx:gdx-bullet-platform:1.9.3:natives-ios"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:1.9.3:natives-ios"
}

// Extracts native libs (*.a) from the native-ios.jar and places them
// under build/libs/ios/.
task copyNatives << {
  file("build/libs/ios/").mkdirs();
  configurations.natives.files.each { jar ->
    def outputDir = null
    if (jar.name.endsWith("natives-ios.jar")) outputDir = file("build/libs/ios")
    if (outputDir != null) {
      copy {
        from zipTree(jar)
        into outputDir
        include "*.a"
      }
    }
  }
}

// Updates a robovm.xml file.
task updateRoboVMXML << {
  def xml = file('robovm.xml')

  if (!xml.exists()) {
    return
  }
  
  // Find all native (*.a) libraries beneath libs
  def libtree = fileTree(dir: 'build/libs', include: '**/*.a')
  
  def config = new groovy.util.XmlParser().parse(xml)
  config.libs.each {libs ->
      libs.children().clear()
      libtree.each { File file ->
          libs.appendNode('lib', 'build/libs/ios/' + file.getName())
      }
  }
  
  def writer = new FileWriter(xml)
  def printer = new XmlNodePrinter(new PrintWriter(writer))
  printer.setPreserveWhitespace true
  printer.print(config)
}

updateRoboVMXML.dependsOn copyNatives
build.dependsOn updateRoboVMXML

launchIPhoneSimulator.dependsOn build
launchIPadSimulator.dependsOn build
launchIOSDevice.dependsOn build
createIPA.dependsOn build
